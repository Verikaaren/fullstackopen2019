{"version":3,"sources":["services/persons.js","components/Person.js","components/Persons.js","components/Filter.js","components/Notification.js","App.js","index.js"],"names":["baseUrl","axios","get","newObject","post","id","delete","then","response","data","Person","props","person","name","number","role","onClick","deletePerson","Persons","persons","map","key","Filter","value","newSearch","onChange","changeEvent","Notification","state","message","type","baseStyle","background","fontSize","borderStyle","borderRadius","padding","marginBottom","notificationStyle","color","style","console","log","App","useEffect","personService","setPersons","useState","newName","setNewName","newNumber","setNewNumber","setNewSearch","errorMessage","setErrorMessage","filterValue","event","target","found","filter","includes","onSubmit","preventDefault","personObject","length","concat","setTimeout","window","confirm","p","catch","error","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3a6a0d23.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  return axios.get(baseUrl)\r\n}\r\n\r\nconst create = newObject => {\r\n  return axios.post(baseUrl, newObject)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  return axios.put(`${baseUrl}/${id}`, newObject)\r\n}\r\n\r\nconst deleteIt = (id) => {\r\n  const request = axios.delete(`${baseUrl}/${id}`)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default {getAll, create, update, deleteIt}","import React from \"react\";\r\n\r\nconst Person = (props) => {\r\n  return (\r\n    <div>\r\n      <p>\r\n        {props.person.name} {props.person.number} <span role=\"img\" onClick={props.deletePerson} >‚ùå </span>\r\n      </p>\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Person;\r\n","import React from \"react\";\r\nimport Person from \"./Person\";\r\n\r\nconst Persons = (props) => {\r\n  const rows = () =>\r\n    props.persons.map(person => <Person deletePerson={() => props.deletePerson(person)} person={person} key={person.id} />);\r\n  return (\r\n    <div>\r\n      <h2>Number</h2>\r\n      {rows()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Persons;\r\n","import React from \"react\";\r\n\r\nconst Filter = props => {\r\n    \r\n  return (\r\n    <div>\r\n      filter by name:{\" \"}\r\n      <input value={props.newSearch} onChange={props.changeEvent} /> <br />\r\n      <br />\r\n      <br />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import React from \"react\";\r\n\r\nconst Notification = ({ state }) => {\r\n  const message = state.message;\r\n  const type = state.type;\r\n\r\n  if (state.message === null) {\r\n    return null;\r\n  }\r\n\r\n  const baseStyle = {\r\n    background: \"lightgrey\",\r\n    fontSize: \"20px\",\r\n    borderStyle: \"solid\",\r\n    borderRadius: \"2px\",\r\n    padding: \"10px\",\r\n    marginBottom: \"10px\"\r\n  };\r\n\r\n  let notificationStyle = null;\r\n\r\n  if (type === \"error\") {\r\n    notificationStyle = {...baseStyle, color: 'red'}\r\n  } else {\r\n    notificationStyle ={...baseStyle, color: 'green'}\r\n  }\r\n\r\n  return <div style={notificationStyle}>{message}{console.log(type)}</div>;\r\n};\r\n\r\nexport default Notification;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport personService from './services/persons';\r\n\r\nimport Persons from './components/Persons';\r\nimport Filter from './components/Filter';\r\nimport Notification from './components/Notification';\r\n\r\nconst App = () => {\r\n\tuseEffect(() => {\r\n\t\tpersonService.getAll().then(response => {\r\n\t\t\tsetPersons(response.data);\r\n\t\t});\r\n\t}, []);\r\n\r\n\tconst [persons, setPersons] = useState([]);\r\n\tconst [newName, setNewName] = useState('');\r\n\tconst [newNumber, setNewNumber] = useState('');\r\n\tconst [newSearch, setNewSearch] = useState('');\r\n\r\n\tconst [errorMessage, setErrorMessage] = useState({\r\n\t\tmessage: null,\r\n\t\ttype: null\r\n\t});\r\n\r\n\tconst handlePersonChange = event => {\r\n\t\tsetNewName(event.target.value);\r\n\t};\r\n\r\n\tconst handleNumberChange = event => {\r\n\t\tsetNewNumber(event.target.value);\r\n\t};\r\n\r\n\tconst handlePersonSearch = event => {\r\n\t\tconsole.log(event.target.value);\r\n\t\tsetNewSearch(event.target.value);\r\n\t\tlet found = persons.filter(person => person.name.includes(newSearch));\r\n\t\tsetPersons(found);\r\n\t};\r\n\r\n\tconst addPerson = event => {\r\n\t\tevent.preventDefault();\r\n\t\tlet check = false;\r\n\t\tlet id = 0;\r\n\r\n\t\r\n\r\n\t\tif (check === true) {\r\n\t\t\tif (\r\n\t\t\t\twindow.confirm(\r\n\t\t\t\t\t` ${newName} is already in phonebook, do you want to replace old number with new one?`\r\n\t\t\t\t)\r\n\t\t\t) {\r\n\t\t\t\treplaceNumber(id, newNumber);\r\n\t\t\t}\r\n\t\t\tsetNewName('');\r\n\t\t\tsetNewNumber('');\r\n\t\t} else {\r\n\t\t\tconst personObject = {\r\n\t\t\t\tname: newName,\r\n\t\t\t\tnumber: newNumber,\r\n\t\t\t\tid: persons.length + 2\r\n\t\t\t};\r\n\t\t\tpersonService.create(personObject).then(response => {\r\n\t\t\t\tsetPersons(persons.concat(response.data));\r\n\t\t\t\tsetErrorMessage({\r\n\t\t\t\t\tmessage: `${newName} is added to Phonebook`,\r\n\t\t\t\t\ttype: 'note'\r\n\t\t\t\t});\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tsetErrorMessage({ ...errorMessage, message: null });\r\n\t\t\t\t}, 2000);\r\n\t\t\t\tsetNewName('');\r\n\t\t\t\tsetNewNumber('');\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\tconst deleteNumber = person => {\r\n\t\tconsole.log(person);\r\n\t\tif (window.confirm(`Do you really want to delete ${person.name}?`)) {\r\n\t\t\tpersonService\r\n\t\t\t\t.deleteIt(person.id)\r\n\t\t\t\t.then(response => {\r\n\t\t\t\t\tsetPersons(persons.filter(p => p.id !== person.id));\r\n\t\t\t\t\tsetErrorMessage({\r\n\t\t\t\t\t\tmessage: `${person.name} was deleted from server`,\r\n\t\t\t\t\t\ttype: 'green'\r\n\t\t\t\t\t});\r\n\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\tsetErrorMessage({ ...errorMessage, message: null });\r\n\t\t\t\t\t}, 2000);\r\n\t\t\t\t})\r\n\t\t\t\t.catch(error => {\r\n\t\t\t\t\tsetErrorMessage({\r\n\t\t\t\t\t\tmessage: `Information of${person.name} was already deleted from sever`,\r\n\t\t\t\t\t\ttype: 'error'\r\n\t\t\t\t\t});\r\n\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\tsetErrorMessage({ ...errorMessage, message: null });\r\n\t\t\t\t\t}, 2000);\r\n\t\t\t\t});\r\n\t\t}\r\n\t};\r\n\t/**/\r\n\tconst replaceNumber = (id, newNumber) => {\r\n\t\tconst person = persons.find(p => p.id === id);\r\n\t\tconst replacedNumber = { ...person, number: newNumber };\r\n\r\n\t\tpersonService\r\n\t\t\t.update(id, replacedNumber)\r\n\t\t\t.then(returnedPerson => {\r\n\t\t\t\tsetPersons(\r\n\t\t\t\t\tpersons.map(person =>\r\n\t\t\t\t\t\tperson.id !== id ? person : returnedPerson.data\r\n\t\t\t\t\t)\r\n\t\t\t\t);\r\n\t\t\t})\r\n\t\t\t.catch(error => {\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t\tsetPersons(persons.filter(n => n.id !== id));\r\n\t\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h1>Phonebook</h1>\r\n\r\n\t\t\t<Notification state={errorMessage} />\r\n\r\n\t\t\t<Filter filterValue={newSearch} changeEvent={handlePersonSearch} />\r\n\r\n\t\t\t<form onSubmit={addPerson}>\r\n\t\t\t\t<div>\r\n\t\t\t\t\tname: <input value={newName} onChange={handlePersonChange} />\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\tnumber:\r\n\t\t\t\t\t<input value={newNumber} onChange={handleNumberChange} />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<button type=\"submit\">add</button>\r\n\t\t\t\t</div>\r\n\t\t\t</form>\r\n\r\n\t\t\t<Persons persons={persons} deletePerson={deleteNumber} />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\"; // highlight-line\n\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}